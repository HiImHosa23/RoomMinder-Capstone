{"version":3,"sources":["server.js"],"names":["express","require","mongoose","PORT","app","use","cors","useUnifiedTopology","log","err","console","error","roommateSchema","Schema","name","String","likes","dislikes","expectations","Roommate","model","get","req","res","roomies","regeneratorRuntime","async","_context","prev","next","awrap","find","sent","json","t0","status","message","stop","post","newRoomie","_context2","body"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,SAAWD,QAAQ,YADnBD,KAAOC,QAAU,QACjBC,IAAQF,UAIRG,KAAO,KAEbC,IAAIC,IAAIC,QAHRF,IAAMA,IAAGJ,QAAGA,QAGZI,SAAQE,QAAR,yEAAA,CACID,iBAAI,EAERH,oBAAiB,IAEbK,KAAAA,WAAAA,OAAAA,QAAoBC,IAAA,iCALxBJ,MAOU,SAAAK,GAAA,OAAAC,QAAAC,MAAA,4BAAAF,KACI,IAAAG,eAAkB,IAAAV,SAAAW,OAAA,CALhCC,KAAAC,OAQMH,MAAAA,CAAAA,QACFE,SADuC,CAAAC,QAEvCC,aAFuCD,OAGvCE,QAAWF,OACXG,SAAYH,SAJhBI,SAAAjB,SAAAkB,MAAA,WAAAR,gBAWAR,IAAIiB,IAAI,gBAAiB,SAAAC,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAX,SAAAY,QAAA,KAAA,EAAAP,EAAAG,EAAAK,KAAAT,EAAAU,KAAAT,GAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,EAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,MAAA,GAAAJ,EAAAY,OAAA,KAAAF,KAAA,CAAAG,QAAA,8CAAA,KAAA,GAAA,IAAA,MAAA,OAAAT,EAAAU,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OASzBjC,IAAIkC,KAAK,iBAAkB,SAAOhB,EAAKC,GAAZ,IAAAgB,EAAA,OAAAd,mBAAAC,MAAA,SAAAc,GAAA,OAAA,OAAAA,EAAAZ,KAAAY,EAAAX,MAAA,KAAA,EAAA,OAAAW,EAAAZ,KAAA,EAPbJ,EAFW,IAAAL,SAAAG,EAAAmB,MASED,EAAAX,KAAA,EAAAJ,mBAAAK,MANfG,EAAKT,QAMU,KAAA,EATFD,EAAAY,OAAA,KAAAF,KAAAM,GASEC,EAAAX,KAAA,GAAA,MAAA,KAAA,EAAAW,EAAAZ,KAAA,EAAAY,EAAAN,GAAAM,EAAA,MAAA,GAMnBjB,EAAIY,OAAO,KAAKF,KAAK,CAACG,QAAS,4CANZ,KAAA,GAAA,IAAA,MAAA,OAAAI,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,OAJnBd,IAAAA,OAAAA,KAAIY,WAAkBC,QAAAA,IAAAA,qCAAAA,OAASjC,KAATiC","file":"server.min.js","sourcesContent":["const express = require('express');\r\nconst mongoose = require('mongoose');\r\nconst cors = require('cors');\r\n\r\nconst app = express();\r\nconst PORT = 3001;\r\n\r\napp.use(cors());\r\napp.use(express.json());\r\n\r\nmongoose.connect('mongodb+srv://dev:Nc210960870@cluster0.peco6ve.mongodb.net/roommatesDB', {\r\n    useNewUrlParser: true,\r\n    useUnifiedTopology: true,\r\n})\r\n    .then(() => console.log('Connected to MongoDB Atlas!'))\r\n    .catch(err => console.error('MongoDB connection error:', err));\r\n\r\n\r\nconst roommateSchema = new mongoose.Schema({\r\n    name: String,\r\n    likes: [String],\r\n    dislikes: [String],\r\n    expectations: String, \r\n    contact: String,\r\n    imageURL: String\r\n});\r\n\r\nconst Roommate = mongoose.model('Roommate', roommateSchema);\r\n\r\napp.get('/api/roomates', async (req, res) => {\r\n    try{\r\n        const roomies = await Roommate.find();\r\n        res.json(roomies);\r\n    } catch(error){\r\n        res.status(500).json({message: 'There was an error fetching this roommate'});\r\n    }\r\n});\r\n\r\napp.post('/api/roommates', async (req, res) => {\r\n    try{\r\n        const newRoomie = new Roommate(req.body);\r\n        await newRoomie.save();\r\n        res.status(201).json(newRoomie);\r\n    } catch(error){\r\n        res.status(400).json({message: 'There was an error saving this roommate'});\r\n    }\r\n});\r\n\r\napp.listen(PORT, () => {\r\n    console.log(`The server is runnig on localhost:${PORT}!`);\r\n})\r\n\r\n"]}